
# Azure Provider source and version being used
terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "=3.0.0"
    }
  }
}

# Configure the Microsoft Azure Provider
provider "azurerm" {
  environment = "usgovernment"
  features {}
}

# Create a resource group
#resource "azurerm_resource_group" "EIS-RG" {
#  name     = "eis-resources"
#  location = "usgovarizona"
#  tags = {
#    environment = "dev"
#  }
#}

#refer to a resource group
data "azurerm_resource_group" "test" {
  name = "EIS-DEVTEST-INT-SOUTHWEST-EIS-RG"
}

#create a subnet
#resource "azurerm_virtual_network" "eis-vn" {
#  name                = "eis-network"
#  resource_group_name = azurerm_resource_group.test.name
#  location            = azurerm_resource_group.test.location
#  address_space       = ["10.123.0.0/16"]
#
#  tags = {
#    environment = "dev"
#  }
#}

#refer to a subnet
data "azurerm_subnet" "test" {
  name                 = "N54CA-Subnet-04"
  virtual_network_name = "EIS-GOV-DEVTEST-SOUTHWEST"
  resource_group_name  = "eis-devtest-int-southwest-network-rg"
}

#Create public IPs
#resource "azurerm_private_ip" "test" {
#  name                = "EISPrivateIP-Test"
#  location            = "usgovarizona"
#  resource_group_name = data.azurerm_resource_group.test.name
#  allocation_method    = "Dynamic"
#}

# create a network interface
resource "azurerm_network_interface" "test" {
  name                = "VAC00Test800-nic"
  location            = data.azurerm_resource_group.test.location
  resource_group_name = data.azurerm_resource_group.test.name

  ip_configuration {
    name                          = "testconfiguration1"
    subnet_id                     = data.azurerm_subnet.test.id
    private_ip_address_allocation = "Dynamic"
  }
}

# Create virtual machine
resource "azurerm_virtual_machine" "test" {
  name                  = "VAC00Test800"
  location              = azurerm_network_interface.test.location
  resource_group_name   = data.azurerm_resource_group.test.name
  network_interface_ids = ["${azurerm_network_interface.test.id}"]
  vm_size               = "Standard_DS1_v2"

  # Uncomment this line to delete the OS disk automatically when deleting the VM
  delete_os_disk_on_termination = true

  # Uncomment this line to delete the data disks automatically when deleting the VM
  delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  }
  storage_os_disk {
    name              = "myosdisk1"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }
  os_profile {
    computer_name  = "hostname"
    admin_username = "testadmin"
    admin_password = "Password1234!"
  }
  os_profile_linux_config {
    disable_password_authentication = false
  }

}
